---
- name: "Copiando template Netplan para Node01..."
  when: inventory_hostname in groups['nodes'][0]
  template: src=50-vagrant-node01.j2 dest=/etc/netplan/50-vagrant.yaml mode="{{ MODE }}" owner="{{ USER }}" group="{{ GROUP }}"

- name: "Aplicando configurações Netplan para Node01..."
  when: inventory_hostname in groups['nodes'][0]
  shell: |
       sudo netplan apply

- name: "Copiando template Netplan para Node02..."
  when: inventory_hostname in groups['nodes'][1]
  template: src=50-vagrant-node02.j2 dest=/etc/netplan/50-vagrant.yaml mode="{{ MODE }}" owner="{{ USER }}" group="{{ GROUP }}"

- name: "Aplicando configurações Netplan para Node02..."
  when: inventory_hostname in groups['nodes'][1]
  shell: |
       sudo netplan apply

- name: "Aplicando Update dos pacotes..."
  apt:
    update_cache: yes

- name: "Instalando pacotes necessários..."
  apt:
    pkg:
    - apt-transport-https
    - ca-certificates
    - curl
    - gnupg2
    - software-properties-common
    - net-tools
    - vim
    - python3

- name: "Adicionando repositório Docker..."
  shell: |
      curl -fsSL https://download.docker.com/linux/ubuntu/gpg | sudo apt-key add -
      apt-key fingerprint 0EBFCD88
      add-apt-repository "deb [arch=amd64] https://download.docker.com/linux/ubuntu $(lsb_release -cs) stable" 

- name: "Aplicando Update dos pacotes..."
  apt:
    update_cache: yes

- name: "Instalando Docker..."
  apt:
    pkg:
    - docker-ce=5:18.09.9~3-0~ubuntu-bionic
    - docker-ce-cli=5:18.09.9~3-0~ubuntu-bionic
    - containerd.io

- name: "Definindo hostnames no arquivo /etc/hosts..."
  shell: |
      echo "{{ MASTER_IP }} master01" >> /etc/hosts
      echo "{{ NODE01_IP }} node01" >> /etc/hosts
      echo "{{ NODE02_IP }} node02" >> /etc/hosts

- name: "Adicionando repositório do Kubernetes..."
  shell: |
      curl -s https://packages.cloud.google.com/apt/doc/apt-key.gpg | sudo apt-key add -
      cat <<EOF | sudo tee /etc/apt/sources.list.d/kubernetes.list 
      deb https://apt.kubernetes.io/ kubernetes-xenial main 
      EOF

- name: "Aplicando Update dos pacotes..."
  apt:
    update_cache: yes

- name: "Instalando pacotes do Kubernetes..."
  apt:
    pkg:
    - kubeadm

- name: "Adicionando apt key para pacotes Kubernetes..."
  shell: |
      apt-mark hold kubeadm